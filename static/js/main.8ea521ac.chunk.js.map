{"version":3,"sources":["hooks/useApi.ts","components/Pictures.tsx","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","detect","file","a","headers","post","response","data","findSimilar","faceId","useStyles","makeStyles","createStyles","picturesOuter","width","paddingTop","position","picturesInner","top","left","height","loaded","objectFit","Pictures","classes","useState","undefined","imageData","setImageData","faces","setFaces","students","setStudents","onChangeInput","e","target","files","length","reader","FileReader","readAsDataURL","onload","result","newFaces","onClick","newStudents","Grid","item","container","className","direction","xs","justify","alignItems","src","alt","Button","variant","color","component","type","accept","hidden","onChange","map","student","Typography","name","confidence","title","flexGrow","body","marginTop","App","AppBar","Toolbar","Container","maxWidth","spacing","Link","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAEAA,IAAMC,SAASC,QACb,mEAEK,IAAMC,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACdC,EAAU,CAAE,eAAgB,4BADd,SAEGN,IAAMO,KAAa,UAAWH,EAAM,CAAEE,YAFzC,cAEdE,EAFc,yBAGbA,EAASC,MAHI,2CAAH,sDAMNC,EAAW,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACFL,IAAMO,KAAgB,eAAgB,CAAEI,WADtC,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sD,OCNlBG,EAAYC,aAAW,kBAC3BC,YAAa,CACXC,cAAe,CACbC,MAAO,OACPC,WAAY,MACZC,SAAU,YAEZC,cAAe,CACbD,SAAU,WACVE,IAAK,EACLC,KAAM,EACNL,MAAO,OACPM,OAAQ,QAEVC,OAAQ,CACNP,MAAO,OACPQ,UAAW,mBAmFFC,EA9EO,WACpB,IAAMC,EAAUd,IADU,EAEQe,wBAA6BC,GAFrC,mBAEnBC,EAFmB,KAERC,EAFQ,OAGAH,mBAAiB,IAHjB,mBAGnBI,EAHmB,KAGZC,EAHY,OAIML,mBAAoB,IAJ1B,mBAInBM,EAJmB,KAITC,EAJS,KAOpBC,EAAa,uCAAG,WAAOC,GAAP,uBAAA/B,EAAA,yDACZgC,EAAWD,EAAXC,OACAC,EAAUD,EAAVC,MACFlC,EAAOkC,GAASA,EAAMC,OAASD,EAAM,GAAK,KAH5B,wDAMdE,EAAS,IAAIC,YACZC,cAActC,GACrBoC,EAAOG,OAAS,WAAO,IACbC,EAAWJ,EAAXI,OACRd,EAAac,IAVK,UAYGzC,EAAOC,GAZV,QAYdyC,EAZc,OAapBb,EAASa,GAbW,4CAAH,sDAgBbC,EAAO,uCAAG,4BAAAzC,EAAA,sEACYK,EAAYqB,EAAM,GAAGpB,QADjC,OACRoC,EADQ,OAEdb,EAAYa,GAFE,2CAAH,qDAKb,OACE,qCACGlB,GACC,cAACmB,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAApB,SACE,cAACF,EAAA,EAAD,CAAMG,UAAWzB,EAAQX,cAAzB,SACE,eAACiC,EAAA,EAAD,CACEG,UAAWzB,EAAQP,cACnB8B,MAAI,EACJC,WAAS,EACTE,UAAU,MAJZ,UAME,cAACJ,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACG,GAAI,EAAGC,QAAQ,SAASC,WAAW,SAAxD,SACE,qBACEC,IAAK3B,EACL4B,IAAI,uCACJN,UAAWzB,EAAQH,WAGvB,cAACyB,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACG,GAAI,EAAGC,QAAQ,SAASC,WAAW,SAAxD,yBAOR,cAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACI,QAAQ,SAA7B,SACE,eAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,UAAU,QAAtD,2CAEE,uBAAOC,KAAK,OAAOC,OAAO,UAAUC,QAAM,EAACC,SAAU9B,SAGxDJ,EAAMQ,OAAS,GACd,cAACS,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACI,QAAQ,SAA7B,SACE,cAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUd,QAASA,EAArD,4BAKHb,EAASM,OAAS,GACjBN,EAASiC,KAAI,SAACC,GAAD,OACX,cAACnB,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACI,QAAQ,SAA7B,SACE,eAACc,EAAA,EAAD,WACGD,EAAQE,KADX,MACyC,IAArBF,EAAQG,WAD5B,QADyCH,EAAQE,aClFvDzD,EAAYC,aAAW,kBAC3BC,YAAa,CACXyD,MAAO,CACLC,SAAU,GAEZC,KAAM,CACJC,UAAW,QAqDFC,EAhDE,WACf,IAAMjD,EAAUd,IAEhB,OACE,qCACE,cAACgE,EAAA,EAAD,CAAQ1D,SAAS,SAAjB,SACE,cAAC2D,EAAA,EAAD,CAASlB,QAAQ,QAAjB,SACE,cAACS,EAAA,EAAD,CAAYT,QAAQ,KAAKR,UAAWzB,EAAQ6C,MAA5C,8HAKJ,cAACO,EAAA,EAAD,CAAWC,SAAS,KAAK5B,UAAWzB,EAAQ+C,KAA5C,SACE,eAACzB,EAAA,EAAD,CAAME,WAAS,EAAC8B,QAAS,EAAzB,UACE,cAAChC,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACI,QAAQ,SAA7B,SACE,qBAAKE,IAAI,0BAA0BC,IAAI,yBAEzC,eAACT,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,eAACmB,EAAA,EAAD,gIAEE,2HAFF,0CAIA,eAACA,EAAA,EAAD,CAAYT,QAAQ,UAApB,mEAEE,cAACsB,EAAA,EAAD,CACEC,KAAK,2EACL7C,OAAO,SAFT,uBAFF,uIAWF,cAAC,EAAD,IACA,cAACW,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACI,QAAQ,WAA7B,SACE,eAACc,EAAA,EAAD,CAAYT,QAAQ,UAApB,+BACM,IACJ,cAACsB,EAAA,EAAD,CAAMC,KAAK,oCAAoC7C,OAAO,SAAtD,0CCvDd8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ea521ac.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL =\n  'https://jzzezp7bhc.execute-api.ap-northeast-1.amazonaws.com/dev/';\n\nexport const detect = async (file: File): Promise<Face[]> => {\n  const headers = { 'content-type': 'application/octet-stream' };\n  const response = await axios.post<Face[]>('/detect', file, { headers });\n  return response.data;\n};\n\nexport const findSimilar = async (faceId: string): Promise<Student[]> => {\n  const response = await axios.post<Student[]>('/findSimilar', { faceId });\n  return response.data;\n};\n","import React, { VFC, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { detect, findSimilar } from '../hooks/useApi';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    picturesOuter: {\n      width: '100%',\n      paddingTop: '50%',\n      position: 'relative',\n    },\n    picturesInner: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n    },\n    loaded: {\n      width: '100%',\n      objectFit: 'scale-down',\n    },\n  })\n);\n\nconst Pictures: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const [faces, setFaces] = useState<Face[]>([]);\n  const [students, setStudents] = useState<Student[]>([]);\n  // const [selectedFaceNum, setSelectedFaceNum] = useState(-1);\n\n  const onChangeInput = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n      setImageData(result as string);\n    };\n    const newFaces = await detect(file);\n    setFaces(newFaces);\n  };\n\n  const onClick = async () => {\n    const newStudents = await findSimilar(faces[0].faceId);\n    setStudents(newStudents);\n  };\n\n  return (\n    <>\n      {imageData && (\n        <Grid item container>\n          <Grid className={classes.picturesOuter}>\n            <Grid\n              className={classes.picturesInner}\n              item\n              container\n              direction=\"row\"\n            >\n              <Grid item container xs={6} justify=\"center\" alignItems=\"center\">\n                <img\n                  src={imageData}\n                  alt=\"選択した画像\"\n                  className={classes.loaded}\n                />\n              </Grid>\n              <Grid item container xs={6} justify=\"center\" alignItems=\"center\">\n                fuga\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n      <Grid item container justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" component=\"label\">\n          画像を選択\n          <input type=\"file\" accept=\"image/*\" hidden onChange={onChangeInput} />\n        </Button>\n      </Grid>\n      {faces.length > 0 && (\n        <Grid item container justify=\"center\">\n          <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n            判定\n          </Button>\n        </Grid>\n      )}\n      {students.length > 0 &&\n        students.map((student) => (\n          <Grid item container justify=\"center\" key={student.name}>\n            <Typography>\n              {student.name} : {student.confidence * 100}%\n            </Typography>\n          </Grid>\n        ))}\n    </>\n  );\n};\n\nexport default Pictures;\n","import React, { VFC } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Container,\n  Grid,\n  Link,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport Pictures from './components/Pictures';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      flexGrow: 1,\n    },\n    body: {\n      marginTop: 8,\n    },\n  })\n);\n\nconst App: VFC = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" className={classes.title}>\n            さくら学院の誰に似てるかな（開発中）\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\" className={classes.body}>\n        <Grid container spacing={2}>\n          <Grid item container justify=\"center\">\n            <img src=\"camera_kao_ninshiki.png\" alt=\"顔認識\" />\n          </Grid>\n          <Grid item>\n            <Typography>\n              画像に写っている人が、さくら学院の中で\n              <b>どの生徒にどのくらい似ているか</b>判定するよ！\n            </Typography>\n            <Typography variant=\"caption\">\n              ※画像は判定のため\n              <Link\n                href=\"https://azure.microsoft.com/ja-jp/services/cognitive-services/face/#demo\"\n                target=\"_blank\"\n              >\n                Microsoft\n              </Link>\n              へ送信されます、それ以外には使用されません\n            </Typography>\n          </Grid>\n          <Pictures />\n          <Grid item container justify=\"flex-end\">\n            <Typography variant=\"caption\">\n              開発：{' '}\n              <Link href=\"https://twitter.com/ryochan_metal\" target=\"_blank\">\n                @ryochan_metal\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}