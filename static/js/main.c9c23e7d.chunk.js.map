{"version":3,"sources":["hooks/settings.ts","hooks/useDetect.ts","hooks/useFindSimilar.ts","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","useDetect","useState","data","setData","error","setError","loading","setLoading","file","post","headers","then","response","catch","err","useFindSimilar","faceId","useStyles","makeStyles","createStyles","title","flexGrow","body","marginTop","img","width","objectFit","App","classes","undefined","imageData","setImageData","detect","faces","findSimilar","students","AppBar","position","Toolbar","variant","Typography","className","Container","maxWidth","Grid","container","spacing","item","justify","src","alt","Link","href","target","Button","color","component","type","accept","hidden","onChange","e","files","length","reader","FileReader","readAsDataURL","onload","result","onClick","map","student","name","confidence","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAEAA,IAAMC,SAASC,QACb,mECaF,IA4BeC,EA5BG,WAAkB,IAAD,EACTC,mBAAiB,IADR,mBAC1BC,EAD0B,KACpBC,EADoB,OAEPF,mBAA4B,MAFrB,mBAE1BG,EAF0B,KAEnBC,EAFmB,OAGHJ,oBAAkB,GAHf,mBAG1BK,EAH0B,KAGjBC,EAHiB,KAyBjC,MAAO,CApBQ,SAACC,GACdD,GAAW,GACXJ,EAAQ,IACRE,EAAS,MAITR,IACGY,KAAa,UAAWD,EAAM,CAAEE,QAHnB,CAAE,eAAgB,8BAI/BC,MAAK,SAACC,GACLT,EAAQS,EAASV,MACjBG,EAAS,MACTE,GAAW,MAEZM,OAAM,SAACC,GACNT,EAASS,GACTP,GAAW,OAIDL,EAAME,EAAOE,ICChBS,EA1BQ,WAAkB,IAAD,EACdd,mBAAoB,IADN,mBAC/BC,EAD+B,KACzBC,EADyB,OAEZF,mBAA4B,MAFhB,mBAE/BG,EAF+B,KAExBC,EAFwB,OAGRJ,oBAAkB,GAHV,mBAG/BK,EAH+B,KAGtBC,EAHsB,KAuBtC,MAAO,CAlBa,SAACS,GACnBT,GAAW,GACXJ,EAAQ,IACRE,EAAS,MAETR,IACGY,KAAgB,eAAgB,CAAEO,WAClCL,MAAK,SAACC,GACLT,EAAQS,EAASV,MACjBG,EAAS,MACTE,GAAW,MAEZM,OAAM,SAACC,GACNT,EAASS,GACTP,GAAW,OAIIL,EAAME,EAAOE,I,OCzB9BW,EAAYC,aAAW,kBAC3BC,YAAa,CACXC,MAAO,CACLC,SAAU,GAEZC,KAAM,CAEJC,UAAW,GAEbC,IAAK,CACHC,MAAO,OACPC,UAAW,mBA0GFC,EArGE,WACf,IAAMC,EAAUX,IADK,EAEahB,wBAA6B4B,GAF1C,mBAEdC,EAFc,KAEHC,EAFG,OAMG/B,IANH,mBAMdgC,EANc,KAMNC,EANM,OAOWlB,IAPX,mBAOdmB,EAPc,KAODC,EAPC,KA0BrB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,SACE,cAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKE,UAAWb,EAAQR,MAA5C,8HAKJ,cAACsB,EAAA,EAAD,CAAWC,SAAS,KAAKF,UAAWb,EAAQN,KAA5C,SACE,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,QAAQ,SAA7B,SACE,qBAAKC,IAAI,0BAA0BC,IAAI,yBAEzC,eAACN,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,eAACP,EAAA,EAAD,gIAEE,qHAFF,sDAIA,eAACA,EAAA,EAAD,CAAYD,QAAQ,UAApB,mEAEE,cAACY,EAAA,EAAD,CACEC,KAAK,2EACLC,OAAO,SAFT,uBAFF,uIAWF,cAACT,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,QAAQ,SAA7B,SACE,eAACM,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUC,UAAU,QAAtD,2CAEE,uBACEC,KAAK,OACLC,OAAO,UACPC,QAAM,EACNC,SArDQ,SAACC,GAA4C,IAEzDC,EADWD,EAAXR,OACAS,MACFtD,EAAOsD,GAASA,EAAMC,OAASD,EAAM,GAAK,KAChD,GAAKtD,EAAL,CACAwB,EAAOxB,GACP,IAAMwD,EAAS,IAAIC,WACnBD,EAAOE,cAAc1D,GACrBwD,EAAOG,OAAS,WAAO,IACbC,EAAWJ,EAAXI,OACRrC,EAAaqC,aA+CRtC,GACC,cAACc,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,QAAQ,SAA7B,SACE,qBAAKC,IAAKnB,EAAWoB,IAAI,uCAAST,UAAWb,EAAQJ,QAGxDS,EAAM8B,OAAS,GACd,cAACnB,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,QAAQ,SAA7B,SACE,cAACM,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUc,QAlDxC,kBAAMnC,EAAYD,EAAM,GAAGjB,SAkD/B,4BAKJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,QAAQ,SAA7B,SACGb,EAAS4B,OAAS,GACjB5B,EAASmC,KAAI,SAACC,GAAD,OACX,eAAC/B,EAAA,EAAD,WACG+B,EAAQC,KADX,MACyC,IAArBD,EAAQE,WAD5B,MAAiBF,EAAQC,WAK/B,cAAC5B,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,QAAQ,WAA7B,SACE,eAACR,EAAA,EAAD,CAAYD,QAAQ,UAApB,+BACM,IACJ,cAACY,EAAA,EAAD,CAAMC,KAAK,oCAAoCC,OAAO,SAAtD,0CCnHdqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c9c23e7d.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL =\n  'https://jzzezp7bhc.execute-api.ap-northeast-1.amazonaws.com/dev/';\n","import { useState } from 'react';\nimport axios, { AxiosError } from 'axios';\nimport './settings';\n\ntype Face = {\n  faceId: string;\n  faceRectangle: {\n    width: number;\n    height: number;\n    left: number;\n    top: number;\n  };\n};\n\ntype IResponse = [(file: File) => void, Face[], AxiosError | null, boolean];\n\nconst useDetect = (): IResponse => {\n  const [data, setData] = useState<Face[]>([]);\n  const [error, setError] = useState<AxiosError | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const detect = (file: File) => {\n    setLoading(true);\n    setData([]);\n    setError(null);\n\n    const headers = { 'content-type': 'application/octet-stream' };\n\n    axios\n      .post<Face[]>('/detect', file, { headers })\n      .then((response) => {\n        setData(response.data);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((err: AxiosError) => {\n        setError(err);\n        setLoading(false);\n      });\n  };\n\n  return [detect, data, error, loading];\n};\n\nexport default useDetect;\n","import { useState } from 'react';\nimport axios, { AxiosError } from 'axios';\nimport './settings';\n\ntype Student = {\n  name: string;\n  confidence: number;\n};\n\ntype IResponse = [\n  (faceId: string) => void,\n  Student[],\n  AxiosError | null,\n  boolean\n];\n\nconst useFindSimilar = (): IResponse => {\n  const [data, setData] = useState<Student[]>([]);\n  const [error, setError] = useState<AxiosError | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const findSimilar = (faceId: string) => {\n    setLoading(true);\n    setData([]);\n    setError(null);\n\n    axios\n      .post<Student[]>('/findSimilar', { faceId })\n      .then((response) => {\n        setData(response.data);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((err: AxiosError) => {\n        setError(err);\n        setLoading(false);\n      });\n  };\n\n  return [findSimilar, data, error, loading];\n};\n\nexport default useFindSimilar;\n","import React, { VFC, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Button,\n  Container,\n  Grid,\n  Link,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport useDetect from './hooks/useDetect';\nimport useFindSimilar from './hooks/useFindSimilar';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      flexGrow: 1,\n    },\n    body: {\n      // padding: 0,\n      marginTop: 8,\n    },\n    img: {\n      width: '100%',\n      objectFit: 'scale-down',\n    },\n  })\n);\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  // const [detect, faces, detectError, isDetectLoading] = useDetect();\n  // const [findSimilar, students, findSimilarError, isFindSimilarLoading] =\n  //   useFindSimilar();\n  const [detect, faces] = useDetect();\n  const [findSimilar, students] = useFindSimilar();\n  // const loading = isDetectLoading || isFindSimilarLoading;\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n    detect(file);\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n      setImageData(result as string);\n    };\n  };\n\n  const onClick = () => findSimilar(faces[0].faceId);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" className={classes.title}>\n            さくら学院の誰に似てるかな（開発中）\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\" className={classes.body}>\n        <Grid container spacing={2}>\n          <Grid item container justify=\"center\">\n            <img src=\"camera_kao_ninshiki.png\" alt=\"顔認識\" />\n          </Grid>\n          <Grid item>\n            <Typography>\n              画像に写っている人が、さくら学院の中で\n              <b>どの生徒にどのくらい似ている</b>のか判定するよ！\n            </Typography>\n            <Typography variant=\"caption\">\n              ※画像は判定のため\n              <Link\n                href=\"https://azure.microsoft.com/ja-jp/services/cognitive-services/face/#demo\"\n                target=\"_blank\"\n              >\n                Microsoft\n              </Link>\n              へ送信されます、それ以外には使用されません\n            </Typography>\n          </Grid>\n          <Grid item container justify=\"center\">\n            <Button variant=\"contained\" color=\"primary\" component=\"label\">\n              画像を選択\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                hidden\n                onChange={onChangeInput}\n              />\n            </Button>\n          </Grid>\n          {imageData && (\n            <Grid item container justify=\"center\">\n              <img src={imageData} alt=\"選択した画像\" className={classes.img} />\n            </Grid>\n          )}\n          {faces.length > 0 && (\n            <Grid item container justify=\"center\">\n              <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n                判定\n              </Button>\n            </Grid>\n          )}\n          <Grid item container justify=\"center\">\n            {students.length > 0 &&\n              students.map((student) => (\n                <Typography key={student.name}>\n                  {student.name} : {student.confidence * 100}%\n                </Typography>\n              ))}\n          </Grid>\n          <Grid item container justify=\"flex-end\">\n            <Typography variant=\"caption\">\n              開発：{' '}\n              <Link href=\"https://twitter.com/ryochan_metal\" target=\"_blank\">\n                @ryochan_metal\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}