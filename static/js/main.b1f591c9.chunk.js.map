{"version":3,"sources":["hooks/useApi.ts","components/Pictures.tsx","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","detect","file","a","headers","post","response","data","findSimilar","faceId","useStyles","makeStyles","createStyles","pictureContainer","position","loaded","width","objectFit","Pictures","classes","useState","undefined","imageData","setImageData","imgRef","useRef","faces","setFaces","students","setStudents","loading","setLoading","widthRatio","current","naturalWidth","heightRatio","naturalHeight","onChangeInput","e","target","files","length","reader","FileReader","readAsDataURL","onload","result","newFaces","onClickFaceRect","newStudents","Grid","item","container","justify","Button","variant","color","component","type","accept","hidden","onChange","direction","className","xs","alignItems","ref","src","alt","map","face","onClick","style","backgroundColor","border","cursor","left","faceRectangle","top","height","student","Typography","name","confidence","title","flexGrow","body","marginTop","App","AppBar","Toolbar","Container","maxWidth","spacing","Link","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1f591c9.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL =\n  'https://jzzezp7bhc.execute-api.ap-northeast-1.amazonaws.com/dev/';\n\nexport const detect = async (file: File): Promise<Face[]> => {\n  const headers = { 'content-type': 'application/octet-stream' };\n  const response = await axios.post<Face[]>('/detect', file, { headers });\n  return response.data;\n};\n\nexport const findSimilar = async (faceId: string): Promise<Student[]> => {\n  const response = await axios.post<Student[]>('/findSimilar', { faceId });\n  return response.data;\n};\n","import React, { VFC, useState, useRef } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { detect, findSimilar } from '../hooks/useApi';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    pictureContainer: {\n      position: 'relative',\n    },\n    loaded: {\n      width: '100%',\n      objectFit: 'contain',\n    },\n  })\n);\n\nconst Pictures: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [faces, setFaces] = useState<Face[]>([]);\n  const [students, setStudents] = useState<Student[]>([]);\n  const [loading, setLoading] = useState(false);\n  // const [selectedFaceNum, setSelectedFaceNum] = useState(-1);\n\n  const widthRatio = imgRef.current ? 100 / imgRef.current.naturalWidth : 0;\n  const heightRatio = imgRef.current ? 100 / imgRef.current.naturalHeight : 0;\n\n  const onChangeInput = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    setLoading(true);\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n      setImageData(result as string);\n    };\n    const newFaces = await detect(file);\n    setFaces(newFaces);\n    setLoading(false);\n  };\n\n  const onClickFaceRect = async (faceId: string) => {\n    setLoading(true);\n    const newStudents = await findSimilar(faceId);\n    setStudents(newStudents);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Grid item container justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" component=\"label\">\n          画像を選択\n          <input type=\"file\" accept=\"image/*\" hidden onChange={onChangeInput} />\n        </Button>\n      </Grid>\n      {imageData && (\n        <Grid item container>\n          <Grid item container direction=\"row\">\n            <Grid\n              className={classes.pictureContainer}\n              item\n              container\n              xs={6}\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <img\n                ref={imgRef}\n                src={imageData}\n                alt=\"選択画像\"\n                className={classes.loaded}\n              />\n              {!loading &&\n                faces.map((face) => (\n                  <button\n                    key={face.faceId}\n                    onClick={() => onClickFaceRect(face.faceId)}\n                    type=\"button\"\n                    style={{\n                      backgroundColor: 'transparent',\n                      border: '2px solid blue',\n                      color: 'transparent',\n                      cursor: 'pointer',\n                      position: 'absolute',\n                      left: `${face.faceRectangle.left * widthRatio}%`,\n                      top: `${face.faceRectangle.top * heightRatio}%`,\n                      width: `${face.faceRectangle.width * widthRatio}%`,\n                      height: `${face.faceRectangle.height * heightRatio}%`,\n                    }}\n                  >\n                    :\n                  </button>\n                ))}\n            </Grid>\n            <Grid item container xs={6} justify=\"center\" alignItems=\"center\">\n              fuga\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n      {students.length > 0 &&\n        students.map((student) => (\n          <Grid item container justify=\"center\" key={student.name}>\n            <Typography>\n              {student.name} : {student.confidence * 100}%\n            </Typography>\n          </Grid>\n        ))}\n    </>\n  );\n};\n\nexport default Pictures;\n","import React, { VFC } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Container,\n  Grid,\n  Link,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport Pictures from './components/Pictures';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      flexGrow: 1,\n    },\n    body: {\n      marginTop: 8,\n    },\n  })\n);\n\nconst App: VFC = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" className={classes.title}>\n            さくら学院の誰に似てるかな（開発中）\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\" className={classes.body}>\n        <Grid container spacing={2}>\n          <Grid item container justify=\"center\">\n            <img src=\"/camera_kao_ninshiki.png\" alt=\"顔認識\" />\n          </Grid>\n          <Grid item>\n            <Typography>\n              画像に写っている人が、さくら学院の中で\n              <b>どの生徒にどのくらい似ているか</b>判定するよ！\n            </Typography>\n            <Typography variant=\"caption\">\n              ※画像は判定のため\n              <Link\n                href=\"https://azure.microsoft.com/ja-jp/services/cognitive-services/face/#demo\"\n                target=\"_blank\"\n              >\n                Microsoft\n              </Link>\n              へ送信されます、それ以外には使用されません\n            </Typography>\n          </Grid>\n          <Pictures />\n          <Grid item container justify=\"flex-end\">\n            <Typography variant=\"caption\">\n              開発：{' '}\n              <Link href=\"https://twitter.com/ryochan_metal\" target=\"_blank\">\n                @ryochan_metal\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}